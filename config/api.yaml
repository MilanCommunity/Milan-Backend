openapi: 3.0.0
info:
  title: Milan API
  description:
    Feel free to raise an issue or PR
    [here](https://github.com/MilanCommunity/Milan-Backend/issues/new/choose).
  version: 1.0

servers:
  - url: http://localhost:5000/
    description: Local server
  - url: https://api.milanhub.org/
    description: Production server

components:
  securitySchemes:
    ApiTokenss:
      type: http
      scheme: bearer

    ApiKey:
      type: apiKey
      in: header
      name: apikey

paths:
  /display/users:
    get:
      tags:
        - Get Data API
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Returns all the users.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              example:
                - _id: "630c75df01038c415989c00f"
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com"
                  password: akldjh^%&^%sdhjh12^%&^%kh534&^%&^%&^jh
                  address: 123 Main Street
                  pincode: 12345
                  __v: 0

  /display/clubs:
    get:
      tags:
        - Get Data API
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Returns all the clubs/NGOs.
      responses:
        "200":
          description: OK

  /display/events:
    get:
      tags:
        - Get Data API
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Returns all the events.
      responses:
        "200":
          description: OK

  /user/register:
    post:
      tags:
        - User Authentication API
      summary: Creates a new user in the database.
      description:
        <b> Request (required) </b> <br /> <br /> - <b> firstname </b> <br /> -
        <b> lastname </b> <br /> - <b> email </b> <br /> - <b> password </b> <br
        /> <br /> <br /> <b> Request (optional) </b> <br /> <br /> - <b> address
        </b> <br /> - <b> pincode </b> <br />

      post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  example: "Tamal"
                lastname:
                  type: string
                  example: "Das"
                email:
                  type: string
                  example: "tamalcodes@gmail.com"
                password:
                  type: string
                  format: password
                  example: "HelloWorld@123$11"
                address:
                  type: string
                  example: "Salt Lake city, Kolkata"
                pincode:
                  type: string
                  example: "700001"

      responses:
        "201":
          description: User has been signed up.
        "409":
          description: User already exists, must login.
        "404":
          description: Not found.
        default:
          description: Internal Server Error.

  /user/login:
    post:
      tags:
        - User Authentication API
      summary: Logs in an user.
      description:
        <b> Request (required) </b> <br /> <br /> - <b> email </b> <br /> - <b>
        password </b> <br />

      post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "tamalcodes@gmail.com"
                password:
                  type: string
                  format: password
                  example: "HelloWorld@123$11"

      responses:
        "201":
          description: User has logged in.
        "401":
          description: Invalid Credentials.
        "404":
          description: USer was not found.
        default:
          description: Internal Server Error.

  /auth/logout:
    get:
      tags:
        - User Authentication API
      security:
        - ApiTokenss: []
        - ApiKey: []
      summary: Log out the user.
      responses:
        "200":
          description: OK

  /user/report:
    post:
      tags:
        - User Contact API
      summary: Report a problem.
      description:
        <b> Request (required) </b> <br /> <br /> - <b> firstname </b> <br /> -
        <b> lastname </b> <br /> - <b> email </b> <br /> - <b> reportmessage
        </b> <br />

      post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  example: "John"
                lastname:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  example: "john.doe@example.com"
                reportmessage:
                  type: string
                  example: "I encountered an issue with the website."

      responses:
        "200":
          description: Report has been submitted sucessfully.
        "429":
          description: Too many requests in 2 hours.
        default:
          description: Internal Server Error.

  /user/contact:
    post:
      tags:
        - User Contact API
      summary: Send a message through the contact form.
      description:
        <b> Request (required) </b> <br /> <br /> - <b> firstname </b> <br /> -
        <b> lastname </b> <br /> - <b> email </b> <br /> - <b> message </b> <br
        />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: "John"
                lastName:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  example: "john.doe@example.com"
                message:
                  type: string
                  example: "Hello, I have a question."

      responses:
        "201":
          description: Message has been submitted sucessfully.
        default:
          description: Internal Server Error.

  /club/register:
    post:
      tags:
        - Club Authentication API
      summary: Register a new club account.
      description:
        <b> Request (required) </b> <br /> <br /> - <b> name </b> <br /> - <b>
        email </b> <br /> - <b> password </b> <br /> - <b> address </b> <br /> -
        <b> pincode </b> <br /> - <b> description </b> <br /> - <b> tagLine </b>
        <br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Example Club"
                email:
                  type: string
                  example: "club@example.com"
                password:
                  type: string
                  example: "Password@123"
                address:
                  type: string
                  example: "123 Main Street"
                pincode:
                  type: string
                  example: "12345"
                description:
                  type: string
                  example: "A description of the club"
                tagLine:
                  type: string
                  example: "Our club, our pride"
      responses:
        "201":
          description: Registration successful, please login.
        "409":
          description: Account already exists.
        default:
          description: Internal Server Error.

  /club/login:
    post:
      tags:
        - Club Authentication API
      summary: Log in to a club account.
      description:
        <b> Request (required) </b> <br /> <br /> - <b> email </b> <br /> - <b>
        password </b> <br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "club@example.com"
                password:
                  type: string
                  example: "Password@123"
      responses:
        "201":
          description: Registration successful, please login.
        "404":
          description: Account doesnot exists.
        "401":
          description: Invalid credentials.'
        default:
          description: Internal Server Error.

  /event/create:
    post:
      tags:
        - Create event API
      summary: Create a new event
      description:
        <b> Request (required) </b> <br /> <br /> - <b> name </b> <br /> - <b>
        slug </b> <br /> - <b> about </b> <br /> - <b> hostClubSlug </b> <br />
        - <b> hostClubName </b> <br /> - <b> bannerImage </b> <br /> - <b>
        thumbnailImage </b> <br /> - <b> mode </b> <br /> - <b> address </b> <br
        /> - <b> city </b> <br /> - <b> state </b> <br /> - <b> country </b> <br
        /> - <b> iframe </b> <br /> - <b> data </b> <br /> - <b> time </b> <br
        /> - <b> tags </b> <br /> - <b> isApproved </b> <br /> - <b> createdAt
        </b> <br /> - <b> updatedAt </b> <br />
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Clean plastics"
                slug:
                  type: string
                  example: "cleanplastics"
                about:
                  type: string
                  example: "Plastic waste management"
                hostClubSlug:
                  type: string
                  example: "exampleclub"
                hostClubName:
                  type: string
                  example: "Example club"
                bannerImage:
                  type: string
                  example: "https://example.image.com"
                thumbnailImage:
                  type: string
                  example: "https://thumbnail.image.com"
                mode:
                  type: string
                  example: "physical mode"
                address:
                  type: string
                  example: "123 Main street"
                city:
                  type: string
                  example: "pune"
                state:
                  type: string
                  example: "Maharashtra"
                country:
                  type: string
                  example: "India"
                iframe:
                  type: string
                  example: "Example iframe"
                date:
                  type: date
                  example: "12.09.2023"
                time:
                  type: string
                  example: "10:20 AM"
                tags:
                  type: array
                  items:
                    type: string
                    example:
                      - "cleaning"
                      - "waste management"
                createdAt:
                  type: date
                  example: "12.09.2023"
                updatedAt:
                  type: date
                  eample: "13.09.2023"
      responses:
        "409":
          description: Event slug already exists
        "201":
          description: Event created
        default:
          description: Internal Server Error

  /event:
    get:
      tags:
       - Get Data API
      security : 
       - ApiTokens: []
       - ApiKey: []
      summary: Returns event details or all events
      parameters:
       - in: query
         name: slug
         required: false
         schema:
          type: string
         description : Optional. If provided, fetches a specific event by its slug.
      responses:
        '200':
          description: Success response with event details or all events.
        '404':
          description: Event Not Found.
        default:
          description: Internal Server Error.